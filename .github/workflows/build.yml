name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    container: ubuntu:18.04
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Install dependencies
      run: |
        apt-get update
        apt-get install -y gcc-multilib g++-multilib cmake build-essential git
    
    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release
    
    - name: Build
      run: cmake --build build --config Release
    
    - name: Package
      run: |
        cd build
        cpack
    
    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: |
          build/SKY.so
        retention-days: 7

  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup MSVC
      uses: microsoft/setup-msbuild@v2
    
    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release -A Win32
    
    - name: Build
      run: cmake --build build --config Release
    
    - name: Package
      run: |
        cd build
        cpack
    
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: |
          build/SKY.dll
        retention-days: 7

  build-status:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Check build results
      run: |
        if [[ "${{ needs.build-linux.result }}" == "success" && "${{ needs.build-windows.result }}" == "success" ]]; then
          echo "✅ All builds successful"
        else
          echo "❌ Some builds failed"
          echo "Linux: ${{ needs.build-linux.result }}"
          echo "Windows: ${{ needs.build-windows.result }}"
          exit 1
        fi
