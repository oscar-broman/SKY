name: Release

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup Earthly
      uses: earthly/actions/setup-earthly@v1
      with:
        version: latest

    - name: Build Linux with Earthly
      run: earthly +build-linux
    
    - name: Package Linux build
      run: |
        mkdir -p dist
        mv build/SKY.so SKY.so
        tar -czf dist/release-linux.tar.gz SKY.inc SKY.so

    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-release
        path: dist/release-linux.tar.gz

  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release -A Win32

    - name: Build Windows
      run: cmake --build build --config Release

    - name: Package Windows build
      run: |
        mkdir -p dist
        copy build/SKY.dll dist/SKY.dll
        copy SKY.inc dist/SKY.inc
        cd dist
        Compress-Archive -Path "SKY.dll,SKY.inc" -DestinationPath "release-windows.zip"

    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-release
        path: dist/release-windows.zip

  create-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: SKY ${{ steps.get_version.outputs.VERSION }}
        body: |
          SKY Plugin Release ${{ steps.get_version.outputs.VERSION }}
          
          ## Downloads
          - **Linux**: linux-release.tar.gz
          - **Windows**: windows-release.zip
          
          ## Changes
          See the commit history for detailed changes.
        draft: false
        prerelease: false

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  upload-release-assets:
    needs: [build-linux, build-windows, create-release]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Download Linux artifact
      uses: actions/download-artifact@v4
      with:
        name: linux-release
        path: dist/release-linux.tar.gz

    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: windows-release
        path: dist/release-windows.zip

    - name: Upload Linux package to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: dist/release-linux.tar.gz
        asset_name: linux-release.tar.gz
        asset_content_type: application/gzip

    - name: Upload Windows package to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: dist/release-windows.zip
        asset_name: windows-release.zip
        asset_content_type: application/zip
